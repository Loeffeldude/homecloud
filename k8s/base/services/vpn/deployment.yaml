apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wireguard-homecloud
  namespace: homecloud
spec:
  serviceName: wireguard-homecloud
  replicas: 1
  selector:
    matchLabels:
      app: wireguard-homecloud
  template:
    metadata:
      labels:
        app: wireguard-homecloud
    spec:
      # nodeSelector:
      #   role: ingress
      hostNetwork: false
      initContainers:
        - name: copy-config
          image: busybox:1.37.0
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /config/wg_confs
              cp /secret/config /config/wg_confs/vps_tunnel.conf
              chmod 600 /config/wg_confs/vps_tunnel.conf
          volumeMounts:
            - name: config
              mountPath: /config
            - name: wireguard-config
              mountPath: /secret
      containers:
        - name: wireguard
          image: linuxserver/wireguard:1.0.20210914
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: INTERNAL_SUBNET
              value: "10.13.13.0/24"
            - name: KEEPDNS
              value: "true"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "ping -c 1 10.13.13.1"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "ping -c 1 10.13.13.1 && wg show vps_tunnel | grep -q 'latest handshake'"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /config
            - name: modules
              mountPath: /lib/modules
              readOnly: true
        # i am behind 7 proxies kiddo ðŸ˜Ž
        - name: proxy
          image: nginx:1.28.0-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
      volumes:
        - name: nginx-conf
          configMap:
            name: wireguard-proxy-config
        - name: wireguard-config
          secret:
            secretName: wireguard-config
            defaultMode: 0600
        - name: modules
          hostPath:
            path: /lib/modules
            type: Directory
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: modules
spec:
  capacity:
    storage: 1Gi
  hostPath:
    path: /lib/modules
    type: Directory
  accessModes:
    - ReadOnlyMany
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wireguard-proxy-config
data:
  default.conf: |
    log_format headers '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'Host: "$http_host" '
                       'X-Real-IP: "$http_x_real_ip" '
                       'X-Forwarded-For: "$http_x_forwarded_for" '
                       'X-Forwarded-Proto: "$http_x_forwarded_proto" '
                       'X-Forwarded-Host: "$http_x_forwarded_host" '
                       'X-Forwarded-Port: "$http_x_forwarded_port"';

    http {
        server {
            listen 80;
            server_name _;

            access_log /var/log/nginx/access.log headers;

            # we let our vps ingress handle body size limits
            client_max_body_size 0;

            location / {
                add_header X-Debug-Via 'nginx-debug';

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://traefik.kube-system.svc.cluster.local:80;
            }
        }
    }

    stream {
        server {
            listen 6443;
            proxy_pass kubernetes.default.svc.cluster.local:6443;
        }
    }
