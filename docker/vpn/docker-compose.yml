services:
  wireguard-homecloud:
    image: linuxserver/wireguard
    container_name: wireguard-homecloud
    # network_mode: "host"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - ./config:/config
      - /lib/modules:/lib/modules:ro
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    healthcheck:
      test: ["CMD", "ping", "-c1", "10.13.13.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    labels:
      # reverse proxy config for traefik
      - "traefik.enable=true"
      - "traefik.http.routers.internal.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.internal.loeffelmeister.de`) || Host(`internal.loeffelmeister.de`)"
      - "traefik.http.routers.internal.entrypoints=web,websecure"
      - "traefik.http.routers.internal.tls=true"
      - "traefik.http.routers.internal.tls.certresolver=myresolver"
      - "traefik.http.routers.internal.tls.domains[0].main=internal.loeffelmeister.de"
      - "traefik.http.routers.internal.tls.domains[0].sans=*.internal.loeffelmeister.de"
      - "traefik.http.routers.internal.tls.domains[1].main=loeffelmeister.de"
      - "traefik.http.routers.internal.tls.domains[1].sans=*.loeffelmeister.de"
      - "traefik.http.services.internal.loadbalancer.servers.url=http://10.13.13.2"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - SERVERURL=loeffelmeister.de
      - SERVERPORT=51820
      - SERVER_ALLOWEDIPS_PEER_homecloud=10.13.13.0/24
      - PEERS=1
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0
      - PERSISTENTKEEPALIVE_PEERS=15s
      - LOG_CONFS=true
    ports:
      - 51820:51820/udp
    restart: unless-stopped

  route-setup:
    image: alpine
    network_mode: "host"
    cap_add:
      - NET_ADMIN
    depends_on:
      wireguard-homecloud:
        condition: service_healthy
    command: |
      sh -c "
        # Get WireGuard IP
        WIREGUARD_IP=$$(getent hosts wireguard-homecloud | awk '{ print $$1 }')
        echo 'Adding route via $$WIREGUARD_IP'

        # Add route
        ip route add 10.13.13.0/24 via $$WIREGUARD_IP
        echo 'Route added'

        # Handle shutdown signals
        cleanup() {
          echo 'Removing route'
          ip route del 10.13.13.0/24 via $$WIREGUARD_IP
          exit 0
        }

        # Trap signals
        trap cleanup SIGTERM SIGINT SIGQUIT

        # Wait indefinitely (until signal)
        while true; do sleep 1; done
      "
    restart: unless-stopped
