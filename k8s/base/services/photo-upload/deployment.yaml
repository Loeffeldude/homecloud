apiVersion: apps/v1
kind: Deployment
metadata:
  name: photo-upload
  namespace: photo-upload
spec:
  selector:
    matchLabels:
      app: photo-upload
  template:
    metadata:
      labels:
        app: photo-upload
    spec:
      imagePullSecrets:
        - name: lfflme-creds
      initContainers:
        - image: cr.lffl.me/photo_upload:latest
          name: photo-upload-migrate
          command: ["uv", "run", "python", "manage.py", "migrate"]
          resources: {}
          env:
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: photo-upload
                  key: secret
            - name: ALLOWED_HOSTS
              value: https://hochzeit.lffl.me
            - name: TRUSTED_ORIGINS
              value: "https://hochzeit.lffl.me"
            - name: DEBUG
              value: "0"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: photo-upload-sqlite-db
              mountPath: /usr/src/app/db.sqlite3
              subPath: db.sqlite3
        - image: cr.lffl.me/photo_upload:latest
          name: photo-upload-static-collect
          command: ["uv", "run", "python", "manage.py", "collectstatic"]
          resources: {}
          env:
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: photo-upload
                  key: secret
            - name: ALLOWED_HOSTS
              value: https://hochzeit.lffl.me
            - name: TRUSTED_ORIGINS
              value: "https://hochzeit.lffl.me"
            - name: DEBUG
              value: "0"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: photo-upload-static
              mountPath: /usr/share/nginx/html/static
            - name: photo-upload-sqlite-db
              mountPath: /usr/src/app/db.sqlite3
              subPath: db.sqlite3
      containers:
        - image: nginx:1.28.0-alpine
          name: photo-upload-media
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 90
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources: {}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: photo-upload-media
              mountPath: /usr/share/nginx/html/media
            - name: photo-upload-static
              mountPath: /usr/share/nginx/html/static
        - image: cr.lffl.me/photo_upload:latest
          name: photo-upload
          resources: {}
          env:
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: photo-upload
                  key: secret
            - name: ALLOWED_HOSTS
              value: https://hochzeit.lffl.me
            - name: TRUSTED_ORIGINS
              value: "https://hochzeit.lffl.me"
            - name: DEBUG
              value: "0"
          ports:
            - containerPort: 8000
              name: photo-upload
          volumeMounts:
            - name: photo-upload-media
              mountPath: /usr/src/app/photo_upload/media
            - name: photo-upload-static
              mountPath: /usr/src/app/photo_upload/static
            - name: photo-upload-sqlite-db
              mountPath: /usr/src/app/db.sqlite3
              subPath: db.sqlite3
      volumes:
        - name: photo-upload-media
          persistentVolumeClaim:
            claimName: photo-upload-media
        - name: photo-upload-static
          persistentVolumeClaim:
            claimName: photo-upload-static
        - name: photo-upload-sqlite-db
          persistentVolumeClaim:
            claimName: photo-upload-sqlite-db

      restartPolicy: Always
      imagePullPolicy: Always
