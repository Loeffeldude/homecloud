apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring-release
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      version: v71.2.0
  interval: 1m0s
  valuesFrom:
    - kind: Secret
      name: discord-webhook-values
  values:
    namespaceOverride: "monitoring"

    ## Provide custom recording or alerting rules to be deployed into the cluster.
    ##
    additionalPrometheusRulesMap: {}
    #  rule-name:
    #    groups:
    #    - name: my_group
    #      rules:
    #      - record: my_record
    #        expr: 100 * my_record

    ## Configuration for alertmanager
    ## ref: https://prometheus.io/docs/alerting/alertmanager/
    ##
    alertmanager:
      enabled: true
      ## @param alertmanager.enableFeatures Enable access to Alertmanager disabled features.
      ##
      enableFeatures: []

      ## Alertmanager configuration directives
      ## ref: https://prometheus.io/docs/alerting/configuration/#configuration-file
      ##      https://prometheus.io/webtools/alerting/routing-tree-editor/
      ##
      config:
        global:
          resolve_timeout: 5m
        inhibit_rules:
          - source_matchers:
              - "severity = critical"
            target_matchers:
              - "severity =~ warning|info"
            equal:
              - "namespace"
              - "alertname"
          - source_matchers:
              - "severity = warning"
            target_matchers:
              - "severity = info"
            equal:
              - "namespace"
              - "alertname"
          - source_matchers:
              - "alertname = InfoInhibitor"
            target_matchers:
              - "severity = info"
            equal:
              - "namespace"
          - target_matchers:
              - "alertname = InfoInhibitor"
        route:
          group_by: ["alertname", "cluster", "service"]
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: "discord"
          routes:
            - receiver: "null"
              matchers:
                - alertname = "Watchdog"
            - receiver: "null"
              matchers:
                - alertname = "KubeControllerManagerDown"
            - receiver: "null"
              matchers:
                - alertname = "KubeSchedulerDown"
            - receiver: "discord-critical"
              matchers:
                - severity = "critical"
        templates:
          - "/etc/alertmanager/config/*.tmpl"

      ## Storage for AlertManager
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi

    ## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
    ##
    grafana:
      enabled: true
      admin:
        existingSecret: grafana-admin
        userKey: username
        passwordKey: password

      envFromSecret: grafan-auth
      env:
        GF_SERVER_ROOT_URL: https://grafana.loeffelmeister.de
      # To make Grafana persistent (Using Statefulset)
      persistence:
        enabled: true
        type: sts
        storageClassName: "longhorn"
        accessModes:
          - ReadWriteOnce
        size: 20Gi
        finalizers:
          - kubernetes.io/pvc-protection

    kubeApiServer:
      enabled: true
    ## Component scraping etcd
    ##
    kubeEtcd:
      enabled: false

    ## Component scraping kube proxy
    ##
    kubeProxy:
      enabled: false

    ## Deploy a Prometheus instance
    ##
    prometheus:
      enabled: true
      ## Settings affecting prometheusSpec
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#prometheusspec
      ##
      prometheusSpec:
        ## Prometheus StorageSpec for persistent data
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/storage.md
        ##
        storageSpec:
          # Using PersistentVolumeClaim
          #
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
